/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { evolutionChainSummarySchema } from './evolutionChainSummarySchema.ts'
import { generationSummarySchema } from './generationSummarySchema.ts'
import { growthRateSummarySchema } from './growthRateSummarySchema.ts'
import { pokemonColorSummarySchema } from './pokemonColorSummarySchema.ts'
import { pokemonDexEntrySchema } from './pokemonDexEntrySchema.ts'
import { pokemonHabitatSummarySchema } from './pokemonHabitatSummarySchema.ts'
import { pokemonShapeSummarySchema } from './pokemonShapeSummarySchema.ts'
import { pokemonSpeciesDescriptionSchema } from './pokemonSpeciesDescriptionSchema.ts'
import { pokemonSpeciesFlavorTextSchema } from './pokemonSpeciesFlavorTextSchema.ts'
import { pokemonSpeciesSummarySchema } from './pokemonSpeciesSummarySchema.ts'
import { z } from 'zod'

export const pokemonSpeciesDetailSchema = z.object({
  id: z.number().int(),
  name: z.string().max(200),
  order: z.number().int().optional().nullable(),
  gender_rate: z.number().int().optional().nullable(),
  capture_rate: z.number().int().optional().nullable(),
  base_happiness: z.number().int().optional().nullable(),
  is_baby: z.boolean().optional(),
  is_legendary: z.boolean().optional(),
  is_mythical: z.boolean().optional(),
  hatch_counter: z.number().int().optional().nullable(),
  has_gender_differences: z.boolean().optional(),
  forms_switchable: z.boolean().optional(),
  growth_rate: z.lazy(() => growthRateSummarySchema),
  pokedex_numbers: z.array(z.lazy(() => pokemonDexEntrySchema)),
  egg_groups: z.array(
    z.object({
      name: z.string(),
      url: z.string().url(),
    }),
  ),
  color: z.lazy(() => pokemonColorSummarySchema),
  shape: z.lazy(() => pokemonShapeSummarySchema),
  evolves_from_species: z.lazy(() => pokemonSpeciesSummarySchema),
  evolution_chain: z.lazy(() => evolutionChainSummarySchema),
  habitat: z.lazy(() => pokemonHabitatSummarySchema),
  generation: z.lazy(() => generationSummarySchema),
  names: z.array(
    z.object({
      language: z.object({
        name: z.string(),
        url: z.string().url(),
      }),
      name: z.string(),
    }),
  ),
  pal_park_encounters: z.array(
    z.object({
      area: z.object({
        name: z.string(),
        url: z.string().url(),
      }),
      base_score: z.number().int(),
      rate: z.number().int(),
    }),
  ),
  form_descriptions: z.array(z.lazy(() => pokemonSpeciesDescriptionSchema)),
  flavor_text_entries: z.array(z.lazy(() => pokemonSpeciesFlavorTextSchema)),
  genera: z.array(
    z.object({
      genus: z.string(),
      language: z.object({
        name: z.string(),
        url: z.string().url(),
      }),
    }),
  ),
  varieties: z.array(
    z.object({
      is_default: z.boolean(),
      pokemon: z.object({
        name: z.string(),
        url: z.string().url(),
      }),
    }),
  ),
})