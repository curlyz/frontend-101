/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { abilityNameSchema } from './abilityNameSchema.ts'
import { generationSummarySchema } from './generationSummarySchema.ts'
import { moveDamageClassSummarySchema } from './moveDamageClassSummarySchema.ts'
import { moveSummarySchema } from './moveSummarySchema.ts'
import { typeGameIndexSchema } from './typeGameIndexSchema.ts'
import { z } from 'zod'

/**
 * @description Serializer for the Type resource
 */
export const typeDetailSchema = z
  .object({
    id: z.number().int(),
    name: z.string().max(200),
    damage_relations: z.object({
      no_damage_to: z.array(
        z.object({
          name: z.string(),
          url: z.string().url(),
        }),
      ),
      half_damage_to: z.array(
        z.object({
          name: z.string(),
          url: z.string().url(),
        }),
      ),
      double_damage_to: z.array(
        z.object({
          name: z.string(),
          url: z.string().url(),
        }),
      ),
      no_damage_from: z.array(
        z.object({
          name: z.string(),
          url: z.string().url(),
        }),
      ),
      half_damage_from: z.array(
        z.object({
          name: z.string(),
          url: z.string().url(),
        }),
      ),
      double_damage_from: z.array(
        z.object({
          name: z.string(),
          url: z.string().url(),
        }),
      ),
    }),
    past_damage_relations: z.array(
      z.object({
        generation: z.object({
          name: z.string(),
          url: z.string().url(),
        }),
        damage_relations: z.object({
          no_damage_to: z.array(
            z.object({
              name: z.string(),
              url: z.string().url(),
            }),
          ),
          half_damage_to: z.array(
            z.object({
              name: z.string(),
              url: z.string().url(),
            }),
          ),
          double_damage_to: z.array(
            z.object({
              name: z.string(),
              url: z.string().url(),
            }),
          ),
          no_damage_from: z.array(
            z.object({
              name: z.string(),
              url: z.string().url(),
            }),
          ),
          half_damage_from: z.array(
            z.object({
              name: z.string(),
              url: z.string().url(),
            }),
          ),
          double_damage_from: z.array(
            z.object({
              name: z.string(),
              url: z.string().url(),
            }),
          ),
        }),
      }),
    ),
    game_indices: z.array(z.lazy(() => typeGameIndexSchema)),
    generation: z.lazy(() => generationSummarySchema),
    move_damage_class: z.lazy(() => moveDamageClassSummarySchema),
    names: z.array(z.lazy(() => abilityNameSchema)),
    pokemon: z.array(
      z.object({
        slot: z.number().int().optional(),
        pokemon: z
          .object({
            name: z.string().describe('The name of the pokemon').optional(),
            url: z.string().url().describe('The URL to get more information about the pokemon').optional(),
          })
          .optional(),
      }),
    ),
    moves: z.array(z.lazy(() => moveSummarySchema)),
    sprites: z.object({}).catchall(
      z.object({}).catchall(
        z.object({
          'name-icon': z.string().url().optional(),
        }),
      ),
    ),
  })
  .describe('Serializer for the Type resource')