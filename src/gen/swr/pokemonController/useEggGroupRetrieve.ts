/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { EggGroupRetrieveQueryResponse, EggGroupRetrievePathParams } from '../../models/pokemonController/EggGroupRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { eggGroupRetrieve } from '../../clients/pokemonController/eggGroupRetrieve.ts'

export const eggGroupRetrieveQueryKey = (id: EggGroupRetrievePathParams['id']) => [{ url: '/api/v2/egg-group/:id/', params: { id: id } }] as const

export type EggGroupRetrieveQueryKey = ReturnType<typeof eggGroupRetrieveQueryKey>

export function eggGroupRetrieveQueryOptions(id: EggGroupRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return eggGroupRetrieve(id, config)
    },
  }
}

/**
 * @description Egg Groups are categories which determine which Pokémon are able to interbreed. Pokémon may belong to either one or two Egg Groups. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Egg_Group) for greater detail.
 * @summary Get egg group
 * {@link /api/v2/egg-group/:id/}
 */
export function useEggGroupRetrieve(
  id: EggGroupRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<EggGroupRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = eggGroupRetrieveQueryKey(id)

  return useSWR<EggGroupRetrieveQueryResponse, ResponseErrorConfig<Error>, EggGroupRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...eggGroupRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}