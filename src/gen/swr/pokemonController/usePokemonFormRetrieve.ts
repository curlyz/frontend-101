/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { PokemonFormRetrieveQueryResponse, PokemonFormRetrievePathParams } from '../../models/pokemonController/PokemonFormRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { pokemonFormRetrieve } from '../../clients/pokemonController/pokemonFormRetrieve.ts'

export const pokemonFormRetrieveQueryKey = (id: PokemonFormRetrievePathParams['id']) => [{ url: '/api/v2/pokemon-form/:id/', params: { id: id } }] as const

export type PokemonFormRetrieveQueryKey = ReturnType<typeof pokemonFormRetrieveQueryKey>

export function pokemonFormRetrieveQueryOptions(id: PokemonFormRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return pokemonFormRetrieve(id, config)
    },
  }
}

/**
 * @description Some Pokémon may appear in one of multiple, visually different forms. These differences are purely cosmetic. For variations within a Pokémon species, which do differ in more than just visuals, the 'Pokémon' entity is used to represent such a variety.
 * @summary Get pokemon form
 * {@link /api/v2/pokemon-form/:id/}
 */
export function usePokemonFormRetrieve(
  id: PokemonFormRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<PokemonFormRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = pokemonFormRetrieveQueryKey(id)

  return useSWR<PokemonFormRetrieveQueryResponse, ResponseErrorConfig<Error>, PokemonFormRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...pokemonFormRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}