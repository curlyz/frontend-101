/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { EggGroupListQueryResponse, EggGroupListQueryParams } from '../../models/pokemonController/EggGroupList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { eggGroupList } from '../../clients/pokemonController/eggGroupList.ts'

export const eggGroupListQueryKey = (params?: EggGroupListQueryParams) => [{ url: '/api/v2/egg-group/' }, ...(params ? [params] : [])] as const

export type EggGroupListQueryKey = ReturnType<typeof eggGroupListQueryKey>

export function eggGroupListQueryOptions(params?: EggGroupListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return eggGroupList(params, config)
    },
  }
}

/**
 * @description Egg Groups are categories which determine which Pokémon are able to interbreed. Pokémon may belong to either one or two Egg Groups. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Egg_Group) for greater detail.
 * @summary List egg groups
 * {@link /api/v2/egg-group/}
 */
export function useEggGroupList(
  params?: EggGroupListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<EggGroupListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = eggGroupListQueryKey(params)

  return useSWR<EggGroupListQueryResponse, ResponseErrorConfig<Error>, EggGroupListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...eggGroupListQueryOptions(params, config),
    ...queryOptions,
  })
}