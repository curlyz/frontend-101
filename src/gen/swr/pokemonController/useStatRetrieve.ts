/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { StatRetrieveQueryResponse, StatRetrievePathParams } from '../../models/pokemonController/StatRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { statRetrieve } from '../../clients/pokemonController/statRetrieve.ts'

export const statRetrieveQueryKey = (id: StatRetrievePathParams['id']) => [{ url: '/api/v2/stat/:id/', params: { id: id } }] as const

export type StatRetrieveQueryKey = ReturnType<typeof statRetrieveQueryKey>

export function statRetrieveQueryOptions(id: StatRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return statRetrieve(id, config)
    },
  }
}

/**
 * @description Stats determine certain aspects of battles. Each Pok√©mon has a value for each stat which grows as they gain levels and can be altered momentarily by effects in battles.
 * @summary Get stat
 * {@link /api/v2/stat/:id/}
 */
export function useStatRetrieve(
  id: StatRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<StatRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = statRetrieveQueryKey(id)

  return useSWR<StatRetrieveQueryResponse, ResponseErrorConfig<Error>, StatRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...statRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}