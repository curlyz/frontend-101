/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { GrowthRateRetrieveQueryResponse, GrowthRateRetrievePathParams } from '../../models/pokemonController/GrowthRateRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { growthRateRetrieve } from '../../clients/pokemonController/growthRateRetrieve.ts'

export const growthRateRetrieveQueryKey = (id: GrowthRateRetrievePathParams['id']) => [{ url: '/api/v2/growth-rate/:id/', params: { id: id } }] as const

export type GrowthRateRetrieveQueryKey = ReturnType<typeof growthRateRetrieveQueryKey>

export function growthRateRetrieveQueryOptions(id: GrowthRateRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return growthRateRetrieve(id, config)
    },
  }
}

/**
 * @description Growth rates are the speed with which Pok√©mon gain levels through experience. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Experience) for greater detail.
 * @summary Get growth rate
 * {@link /api/v2/growth-rate/:id/}
 */
export function useGrowthRateRetrieve(
  id: GrowthRateRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<GrowthRateRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = growthRateRetrieveQueryKey(id)

  return useSWR<GrowthRateRetrieveQueryResponse, ResponseErrorConfig<Error>, GrowthRateRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...growthRateRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}