/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { AbilityRetrieveQueryResponse, AbilityRetrievePathParams } from '../../models/pokemonController/AbilityRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { abilityRetrieve } from '../../clients/pokemonController/abilityRetrieve.ts'

export const abilityRetrieveQueryKey = (id: AbilityRetrievePathParams['id']) => [{ url: '/api/v2/ability/:id/', params: { id: id } }] as const

export type AbilityRetrieveQueryKey = ReturnType<typeof abilityRetrieveQueryKey>

export function abilityRetrieveQueryOptions(id: AbilityRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return abilityRetrieve(id, config)
    },
  }
}

/**
 * @description Abilities provide passive effects for Pokémon in battle or in the overworld. Pokémon have multiple possible abilities but can have only one ability at a time. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Ability) for greater detail.
 * {@link /api/v2/ability/:id/}
 */
export function useAbilityRetrieve(
  id: AbilityRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<AbilityRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = abilityRetrieveQueryKey(id)

  return useSWR<AbilityRetrieveQueryResponse, ResponseErrorConfig<Error>, AbilityRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...abilityRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}