/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { MoveDamageClassListQueryResponse, MoveDamageClassListQueryParams } from '../../models/pokemonController/MoveDamageClassList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { moveDamageClassList } from '../../clients/pokemonController/moveDamageClassList.ts'

export const moveDamageClassListQueryKey = (params?: MoveDamageClassListQueryParams) =>
  [{ url: '/api/v2/move-damage-class/' }, ...(params ? [params] : [])] as const

export type MoveDamageClassListQueryKey = ReturnType<typeof moveDamageClassListQueryKey>

export function moveDamageClassListQueryOptions(params?: MoveDamageClassListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return moveDamageClassList(params, config)
    },
  }
}

/**
 * @description Damage classes moves can have, e.g. physical, special, or non-damaging.
 * @summary List move damage classes
 * {@link /api/v2/move-damage-class/}
 */
export function useMoveDamageClassList(
  params?: MoveDamageClassListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<MoveDamageClassListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = moveDamageClassListQueryKey(params)

  return useSWR<MoveDamageClassListQueryResponse, ResponseErrorConfig<Error>, MoveDamageClassListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...moveDamageClassListQueryOptions(params, config),
    ...queryOptions,
  })
}