/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { NatureRetrieveQueryResponse, NatureRetrievePathParams } from '../types/NatureRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { natureRetrieve } from '../client/natureRetrieve.ts'

export const natureRetrieveQueryKey = (id: NatureRetrievePathParams['id']) => [{ url: '/api/v2/nature/:id/', params: { id: id } }] as const

export type NatureRetrieveQueryKey = ReturnType<typeof natureRetrieveQueryKey>

export function natureRetrieveQueryOptions(id: NatureRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return natureRetrieve(id, config)
    },
  }
}

/**
 * @description Natures influence how a Pok√©mon's stats grow. See [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Nature) for greater detail.
 * @summary Get nature
 * {@link /api/v2/nature/:id/}
 */
export function useNatureRetrieve(
  id: NatureRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<NatureRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = natureRetrieveQueryKey(id)

  return useSWR<NatureRetrieveQueryResponse, ResponseErrorConfig<Error>, NatureRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...natureRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}