/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { BerryFlavorRetrieveQueryResponse, BerryFlavorRetrievePathParams } from '../types/BerryFlavorRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { berryFlavorRetrieve } from '../client/berryFlavorRetrieve.ts'

export const berryFlavorRetrieveQueryKey = (id: BerryFlavorRetrievePathParams['id']) => [{ url: '/api/v2/berry-flavor/:id/', params: { id: id } }] as const

export type BerryFlavorRetrieveQueryKey = ReturnType<typeof berryFlavorRetrieveQueryKey>

export function berryFlavorRetrieveQueryOptions(id: BerryFlavorRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return berryFlavorRetrieve(id, config)
    },
  }
}

/**
 * @description Flavors determine whether a Pok√©mon will benefit or suffer from eating a berry based on their **nature**. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Flavor) for greater detail.
 * @summary Get berries by flavor
 * {@link /api/v2/berry-flavor/:id/}
 */
export function useBerryFlavorRetrieve(
  id: BerryFlavorRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<BerryFlavorRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = berryFlavorRetrieveQueryKey(id)

  return useSWR<BerryFlavorRetrieveQueryResponse, ResponseErrorConfig<Error>, BerryFlavorRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...berryFlavorRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}