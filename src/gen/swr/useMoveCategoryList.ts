/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { MoveCategoryListQueryResponse, MoveCategoryListQueryParams } from '../types/MoveCategoryList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { moveCategoryList } from '../client/moveCategoryList.ts'

export const moveCategoryListQueryKey = (params?: MoveCategoryListQueryParams) => [{ url: '/api/v2/move-category/' }, ...(params ? [params] : [])] as const

export type MoveCategoryListQueryKey = ReturnType<typeof moveCategoryListQueryKey>

export function moveCategoryListQueryOptions(params?: MoveCategoryListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return moveCategoryList(params, config)
    },
  }
}

/**
 * @description Very general categories that loosely group move effects.
 * @summary List move meta categories
 * {@link /api/v2/move-category/}
 */
export function useMoveCategoryList(
  params?: MoveCategoryListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<MoveCategoryListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = moveCategoryListQueryKey(params)

  return useSWR<MoveCategoryListQueryResponse, ResponseErrorConfig<Error>, MoveCategoryListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...moveCategoryListQueryOptions(params, config),
    ...queryOptions,
  })
}