/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { PokemonShapeListQueryResponse, PokemonShapeListQueryParams } from '../types/PokemonShapeList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { pokemonShapeList } from '../client/pokemonShapeList.ts'

export const pokemonShapeListQueryKey = (params?: PokemonShapeListQueryParams) => [{ url: '/api/v2/pokemon-shape/' }, ...(params ? [params] : [])] as const

export type PokemonShapeListQueryKey = ReturnType<typeof pokemonShapeListQueryKey>

export function pokemonShapeListQueryOptions(params?: PokemonShapeListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return pokemonShapeList(params, config)
    },
  }
}

/**
 * @description Shapes used for sorting Pokémon in a Pokédex.
 * @summary List pokemon shapes
 * {@link /api/v2/pokemon-shape/}
 */
export function usePokemonShapeList(
  params?: PokemonShapeListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<PokemonShapeListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = pokemonShapeListQueryKey(params)

  return useSWR<PokemonShapeListQueryResponse, ResponseErrorConfig<Error>, PokemonShapeListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...pokemonShapeListQueryOptions(params, config),
    ...queryOptions,
  })
}