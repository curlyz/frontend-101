/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { MoveCategoryRetrieveQueryResponse, MoveCategoryRetrievePathParams } from '../../models/movesController/MoveCategoryRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { moveCategoryRetrieve } from '../../clients/movesController/moveCategoryRetrieve.ts'

export const moveCategoryRetrieveQueryKey = (id: MoveCategoryRetrievePathParams['id']) => [{ url: '/api/v2/move-category/:id/', params: { id: id } }] as const

export type MoveCategoryRetrieveQueryKey = ReturnType<typeof moveCategoryRetrieveQueryKey>

export function moveCategoryRetrieveQueryOptions(id: MoveCategoryRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return moveCategoryRetrieve(id, config)
    },
  }
}

/**
 * @description Very general categories that loosely group move effects.
 * @summary Get move meta category
 * {@link /api/v2/move-category/:id/}
 */
export function useMoveCategoryRetrieve(
  id: MoveCategoryRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<MoveCategoryRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = moveCategoryRetrieveQueryKey(id)

  return useSWR<MoveCategoryRetrieveQueryResponse, ResponseErrorConfig<Error>, MoveCategoryRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...moveCategoryRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}