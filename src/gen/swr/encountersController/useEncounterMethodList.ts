/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { EncounterMethodListQueryResponse, EncounterMethodListQueryParams } from '../../models/encountersController/EncounterMethodList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { encounterMethodList } from '../../clients/encountersController/encounterMethodList.ts'

export const encounterMethodListQueryKey = (params?: EncounterMethodListQueryParams) =>
  [{ url: '/api/v2/encounter-method/' }, ...(params ? [params] : [])] as const

export type EncounterMethodListQueryKey = ReturnType<typeof encounterMethodListQueryKey>

export function encounterMethodListQueryOptions(params?: EncounterMethodListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return encounterMethodList(params, config)
    },
  }
}

/**
 * @description Methods by which the player might can encounter Pok√©mon in the wild, e.g., walking in tall grass. Check out Bulbapedia for greater detail.
 * @summary List encounter methods
 * {@link /api/v2/encounter-method/}
 */
export function useEncounterMethodList(
  params?: EncounterMethodListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<EncounterMethodListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = encounterMethodListQueryKey(params)

  return useSWR<EncounterMethodListQueryResponse, ResponseErrorConfig<Error>, EncounterMethodListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...encounterMethodListQueryOptions(params, config),
    ...queryOptions,
  })
}