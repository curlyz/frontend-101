/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { AbilityListQueryResponse, AbilityListQueryParams } from '../types/AbilityList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { abilityList } from '../client/abilityList.ts'

export const abilityListQueryKey = (params?: AbilityListQueryParams) => [{ url: '/api/v2/ability/' }, ...(params ? [params] : [])] as const

export type AbilityListQueryKey = ReturnType<typeof abilityListQueryKey>

export function abilityListQueryOptions(params?: AbilityListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return abilityList(params, config)
    },
  }
}

/**
 * @description Abilities provide passive effects for Pokémon in battle or in the overworld. Pokémon have multiple possible abilities but can have only one ability at a time. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Ability) for greater detail.
 * {@link /api/v2/ability/}
 */
export function useAbilityList(
  params?: AbilityListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<AbilityListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = abilityListQueryKey(params)

  return useSWR<AbilityListQueryResponse, ResponseErrorConfig<Error>, AbilityListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...abilityListQueryOptions(params, config),
    ...queryOptions,
  })
}