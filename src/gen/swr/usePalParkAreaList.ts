/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { PalParkAreaListQueryResponse, PalParkAreaListQueryParams } from '../types/PalParkAreaList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { palParkAreaList } from '../client/palParkAreaList.ts'

export const palParkAreaListQueryKey = (params?: PalParkAreaListQueryParams) => [{ url: '/api/v2/pal-park-area/' }, ...(params ? [params] : [])] as const

export type PalParkAreaListQueryKey = ReturnType<typeof palParkAreaListQueryKey>

export function palParkAreaListQueryOptions(params?: PalParkAreaListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return palParkAreaList(params, config)
    },
  }
}

/**
 * @description Areas used for grouping Pok√©mon encounters in Pal Park. They're like habitats that are specific to Pal Park.
 * @summary List pal park areas
 * {@link /api/v2/pal-park-area/}
 */
export function usePalParkAreaList(
  params?: PalParkAreaListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<PalParkAreaListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = palParkAreaListQueryKey(params)

  return useSWR<PalParkAreaListQueryResponse, ResponseErrorConfig<Error>, PalParkAreaListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...palParkAreaListQueryOptions(params, config),
    ...queryOptions,
  })
}