/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { GenderListQueryResponse, GenderListQueryParams } from '../types/GenderList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { genderList } from '../client/genderList.ts'

export const genderListQueryKey = (params?: GenderListQueryParams) => [{ url: '/api/v2/gender/' }, ...(params ? [params] : [])] as const

export type GenderListQueryKey = ReturnType<typeof genderListQueryKey>

export function genderListQueryOptions(params?: GenderListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return genderList(params, config)
    },
  }
}

/**
 * @description Genders were introduced in Generation II for the purposes of breeding Pok√©mon but can also result in visual differences or even different evolutionary lines. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Gender) for greater detail.
 * @summary List genders
 * {@link /api/v2/gender/}
 */
export function useGenderList(
  params?: GenderListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<GenderListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = genderListQueryKey(params)

  return useSWR<GenderListQueryResponse, ResponseErrorConfig<Error>, GenderListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...genderListQueryOptions(params, config),
    ...queryOptions,
  })
}