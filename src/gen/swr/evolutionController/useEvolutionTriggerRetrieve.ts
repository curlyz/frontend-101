/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { EvolutionTriggerRetrieveQueryResponse, EvolutionTriggerRetrievePathParams } from '../../models/evolutionController/EvolutionTriggerRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { evolutionTriggerRetrieve } from '../../clients/evolutionController/evolutionTriggerRetrieve.ts'

export const evolutionTriggerRetrieveQueryKey = (id: EvolutionTriggerRetrievePathParams['id']) =>
  [{ url: '/api/v2/evolution-trigger/:id/', params: { id: id } }] as const

export type EvolutionTriggerRetrieveQueryKey = ReturnType<typeof evolutionTriggerRetrieveQueryKey>

export function evolutionTriggerRetrieveQueryOptions(
  id: EvolutionTriggerRetrievePathParams['id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  return {
    fetcher: async () => {
      return evolutionTriggerRetrieve(id, config)
    },
  }
}

/**
 * @description Evolution triggers are the events and conditions that cause a Pok√©mon to evolve. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Methods_of_evolution) for greater detail.
 * @summary Get evolution trigger
 * {@link /api/v2/evolution-trigger/:id/}
 */
export function useEvolutionTriggerRetrieve(
  id: EvolutionTriggerRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<EvolutionTriggerRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = evolutionTriggerRetrieveQueryKey(id)

  return useSWR<EvolutionTriggerRetrieveQueryResponse, ResponseErrorConfig<Error>, EvolutionTriggerRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...evolutionTriggerRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}