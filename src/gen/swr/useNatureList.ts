/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { NatureListQueryResponse, NatureListQueryParams } from '../types/NatureList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { natureList } from '../client/natureList.ts'

export const natureListQueryKey = (params?: NatureListQueryParams) => [{ url: '/api/v2/nature/' }, ...(params ? [params] : [])] as const

export type NatureListQueryKey = ReturnType<typeof natureListQueryKey>

export function natureListQueryOptions(params?: NatureListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return natureList(params, config)
    },
  }
}

/**
 * @description Natures influence how a Pok√©mon's stats grow. See [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Nature) for greater detail.
 * @summary List natures
 * {@link /api/v2/nature/}
 */
export function useNatureList(
  params?: NatureListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<NatureListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = natureListQueryKey(params)

  return useSWR<NatureListQueryResponse, ResponseErrorConfig<Error>, NatureListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...natureListQueryOptions(params, config),
    ...queryOptions,
  })
}