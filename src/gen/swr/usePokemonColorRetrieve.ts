/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { PokemonColorRetrieveQueryResponse, PokemonColorRetrievePathParams } from '../types/PokemonColorRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { pokemonColorRetrieve } from '../client/pokemonColorRetrieve.ts'

export const pokemonColorRetrieveQueryKey = (id: PokemonColorRetrievePathParams['id']) => [{ url: '/api/v2/pokemon-color/:id/', params: { id: id } }] as const

export type PokemonColorRetrieveQueryKey = ReturnType<typeof pokemonColorRetrieveQueryKey>

export function pokemonColorRetrieveQueryOptions(id: PokemonColorRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return pokemonColorRetrieve(id, config)
    },
  }
}

/**
 * @description Colors used for sorting Pokémon in a Pokédex. The color listed in the Pokédex is usually the color most apparent or covering each Pokémon's body. No orange category exists; Pokémon that are primarily orange are listed as red or brown.
 * @summary Get pokemon color
 * {@link /api/v2/pokemon-color/:id/}
 */
export function usePokemonColorRetrieve(
  id: PokemonColorRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<PokemonColorRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = pokemonColorRetrieveQueryKey(id)

  return useSWR<PokemonColorRetrieveQueryResponse, ResponseErrorConfig<Error>, PokemonColorRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...pokemonColorRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}