/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { ItemListQueryResponse, ItemListQueryParams } from '../../models/itemsController/ItemList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { itemList } from '../../clients/itemsController/itemList.ts'

export const itemListQueryKey = (params?: ItemListQueryParams) => [{ url: '/api/v2/item/' }, ...(params ? [params] : [])] as const

export type ItemListQueryKey = ReturnType<typeof itemListQueryKey>

export function itemListQueryOptions(params?: ItemListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return itemList(params, config)
    },
  }
}

/**
 * @description An item is an object in the games which the player can pick up, keep in their bag, and use in some manner. They have various uses, including healing, powering up, helping catch Pok√©mon, or to access a new area.
 * @summary List items
 * {@link /api/v2/item/}
 */
export function useItemList(
  params?: ItemListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<ItemListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = itemListQueryKey(params)

  return useSWR<ItemListQueryResponse, ResponseErrorConfig<Error>, ItemListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...itemListQueryOptions(params, config),
    ...queryOptions,
  })
}