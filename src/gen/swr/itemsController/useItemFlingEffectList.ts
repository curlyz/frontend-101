/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { ItemFlingEffectListQueryResponse, ItemFlingEffectListQueryParams } from '../../models/itemsController/ItemFlingEffectList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { itemFlingEffectList } from '../../clients/itemsController/itemFlingEffectList.ts'

export const itemFlingEffectListQueryKey = (params?: ItemFlingEffectListQueryParams) =>
  [{ url: '/api/v2/item-fling-effect/' }, ...(params ? [params] : [])] as const

export type ItemFlingEffectListQueryKey = ReturnType<typeof itemFlingEffectListQueryKey>

export function itemFlingEffectListQueryOptions(params?: ItemFlingEffectListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return itemFlingEffectList(params, config)
    },
  }
}

/**
 * @description The various effects of the move"Fling" when used with different items.
 * @summary List item fling effects
 * {@link /api/v2/item-fling-effect/}
 */
export function useItemFlingEffectList(
  params?: ItemFlingEffectListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<ItemFlingEffectListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = itemFlingEffectListQueryKey(params)

  return useSWR<ItemFlingEffectListQueryResponse, ResponseErrorConfig<Error>, ItemFlingEffectListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...itemFlingEffectListQueryOptions(params, config),
    ...queryOptions,
  })
}