/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { MoveAilmentRetrieveQueryResponse, MoveAilmentRetrievePathParams } from '../types/MoveAilmentRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { moveAilmentRetrieve } from '../client/moveAilmentRetrieve.ts'

export const moveAilmentRetrieveQueryKey = (id: MoveAilmentRetrievePathParams['id']) => [{ url: '/api/v2/move-ailment/:id/', params: { id: id } }] as const

export type MoveAilmentRetrieveQueryKey = ReturnType<typeof moveAilmentRetrieveQueryKey>

export function moveAilmentRetrieveQueryOptions(id: MoveAilmentRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return moveAilmentRetrieve(id, config)
    },
  }
}

/**
 * @description Move Ailments are status conditions caused by moves used during battle. See [Bulbapedia](https://bulbapedia.bulbagarden.net/wiki/Status_condition) for greater detail.
 * @summary Get move meta ailment
 * {@link /api/v2/move-ailment/:id/}
 */
export function useMoveAilmentRetrieve(
  id: MoveAilmentRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<MoveAilmentRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = moveAilmentRetrieveQueryKey(id)

  return useSWR<MoveAilmentRetrieveQueryResponse, ResponseErrorConfig<Error>, MoveAilmentRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...moveAilmentRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}