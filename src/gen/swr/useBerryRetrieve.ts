/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { BerryRetrieveQueryResponse, BerryRetrievePathParams } from '../types/BerryRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { berryRetrieve } from '../client/berryRetrieve.ts'

export const berryRetrieveQueryKey = (id: BerryRetrievePathParams['id']) => [{ url: '/api/v2/berry/:id/', params: { id: id } }] as const

export type BerryRetrieveQueryKey = ReturnType<typeof berryRetrieveQueryKey>

export function berryRetrieveQueryOptions(id: BerryRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return berryRetrieve(id, config)
    },
  }
}

/**
 * @description Berries are small fruits that can provide HP and status condition restoration, stat enhancement, and even damage negation when eaten by Pok√©mon. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Berry) for greater detail.
 * @summary Get a berry
 * {@link /api/v2/berry/:id/}
 */
export function useBerryRetrieve(
  id: BerryRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<BerryRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = berryRetrieveQueryKey(id)

  return useSWR<BerryRetrieveQueryResponse, ResponseErrorConfig<Error>, BerryRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...berryRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}