/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { EncounterConditionValueListQueryResponse, EncounterConditionValueListQueryParams } from '../types/EncounterConditionValueList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { encounterConditionValueList } from '../client/encounterConditionValueList.ts'

export const encounterConditionValueListQueryKey = (params?: EncounterConditionValueListQueryParams) =>
  [{ url: '/api/v2/encounter-condition-value/' }, ...(params ? [params] : [])] as const

export type EncounterConditionValueListQueryKey = ReturnType<typeof encounterConditionValueListQueryKey>

export function encounterConditionValueListQueryOptions(
  params?: EncounterConditionValueListQueryParams,
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  return {
    fetcher: async () => {
      return encounterConditionValueList(params, config)
    },
  }
}

/**
 * @description Encounter condition values are the various states that an encounter condition can have, i.e., time of day can be either day or night.
 * @summary List encounter condition values
 * {@link /api/v2/encounter-condition-value/}
 */
export function useEncounterConditionValueList(
  params?: EncounterConditionValueListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<EncounterConditionValueListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = encounterConditionValueListQueryKey(params)

  return useSWR<EncounterConditionValueListQueryResponse, ResponseErrorConfig<Error>, EncounterConditionValueListQueryKey | null>(
    shouldFetch ? queryKey : null,
    {
      ...encounterConditionValueListQueryOptions(params, config),
      ...queryOptions,
    },
  )
}