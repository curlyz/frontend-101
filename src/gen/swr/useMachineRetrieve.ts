/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { MachineRetrieveQueryResponse, MachineRetrievePathParams } from '../types/MachineRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { machineRetrieve } from '../client/machineRetrieve.ts'

export const machineRetrieveQueryKey = (id: MachineRetrievePathParams['id']) => [{ url: '/api/v2/machine/:id/', params: { id: id } }] as const

export type MachineRetrieveQueryKey = ReturnType<typeof machineRetrieveQueryKey>

export function machineRetrieveQueryOptions(id: MachineRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return machineRetrieve(id, config)
    },
  }
}

/**
 * @description Machines are the representation of items that teach moves to Pok√©mon. They vary from version to version, so it is not certain that one specific TM or HM corresponds to a single Machine.
 * @summary Get machine
 * {@link /api/v2/machine/:id/}
 */
export function useMachineRetrieve(
  id: MachineRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<MachineRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = machineRetrieveQueryKey(id)

  return useSWR<MachineRetrieveQueryResponse, ResponseErrorConfig<Error>, MachineRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...machineRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}