/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { MoveAilmentListQueryResponse, MoveAilmentListQueryParams } from '../types/MoveAilmentList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { moveAilmentList } from '../client/moveAilmentList.ts'

export const moveAilmentListQueryKey = (params?: MoveAilmentListQueryParams) => [{ url: '/api/v2/move-ailment/' }, ...(params ? [params] : [])] as const

export type MoveAilmentListQueryKey = ReturnType<typeof moveAilmentListQueryKey>

export function moveAilmentListQueryOptions(params?: MoveAilmentListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return moveAilmentList(params, config)
    },
  }
}

/**
 * @description Move Ailments are status conditions caused by moves used during battle. See [Bulbapedia](https://bulbapedia.bulbagarden.net/wiki/Status_condition) for greater detail.
 * @summary List move meta ailments
 * {@link /api/v2/move-ailment/}
 */
export function useMoveAilmentList(
  params?: MoveAilmentListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<MoveAilmentListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = moveAilmentListQueryKey(params)

  return useSWR<MoveAilmentListQueryResponse, ResponseErrorConfig<Error>, MoveAilmentListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...moveAilmentListQueryOptions(params, config),
    ...queryOptions,
  })
}