/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { ContestTypeListQueryResponse, ContestTypeListQueryParams } from '../../models/contestsController/ContestTypeList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { contestTypeList } from '../../clients/contestsController/contestTypeList.ts'

export const contestTypeListQueryKey = (params?: ContestTypeListQueryParams) => [{ url: '/api/v2/contest-type/' }, ...(params ? [params] : [])] as const

export type ContestTypeListQueryKey = ReturnType<typeof contestTypeListQueryKey>

export function contestTypeListQueryOptions(params?: ContestTypeListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return contestTypeList(params, config)
    },
  }
}

/**
 * @description Contest types are categories judges used to weigh a Pokémon's condition in Pokémon contests. Check out [Bulbapedia](http://bulbapedia.bulbagarden.net/wiki/Contest_condition) for greater detail.
 * @summary List contest types
 * {@link /api/v2/contest-type/}
 */
export function useContestTypeList(
  params?: ContestTypeListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<ContestTypeListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = contestTypeListQueryKey(params)

  return useSWR<ContestTypeListQueryResponse, ResponseErrorConfig<Error>, ContestTypeListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...contestTypeListQueryOptions(params, config),
    ...queryOptions,
  })
}