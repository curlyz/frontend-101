/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { VersionGroupListQueryResponse, VersionGroupListQueryParams } from '../types/VersionGroupList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { versionGroupList } from '../client/versionGroupList.ts'

export const versionGroupListQueryKey = (params?: VersionGroupListQueryParams) => [{ url: '/api/v2/version-group/' }, ...(params ? [params] : [])] as const

export type VersionGroupListQueryKey = ReturnType<typeof versionGroupListQueryKey>

export function versionGroupListQueryOptions(params?: VersionGroupListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return versionGroupList(params, config)
    },
  }
}

/**
 * @description Version groups categorize highly similar versions of the games.
 * @summary List version groups
 * {@link /api/v2/version-group/}
 */
export function useVersionGroupList(
  params?: VersionGroupListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<VersionGroupListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = versionGroupListQueryKey(params)

  return useSWR<VersionGroupListQueryResponse, ResponseErrorConfig<Error>, VersionGroupListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...versionGroupListQueryOptions(params, config),
    ...queryOptions,
  })
}