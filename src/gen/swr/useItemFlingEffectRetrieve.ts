/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { ItemFlingEffectRetrieveQueryResponse, ItemFlingEffectRetrievePathParams } from '../types/ItemFlingEffectRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { itemFlingEffectRetrieve } from '../client/itemFlingEffectRetrieve.ts'

export const itemFlingEffectRetrieveQueryKey = (id: ItemFlingEffectRetrievePathParams['id']) =>
  [{ url: '/api/v2/item-fling-effect/:id/', params: { id: id } }] as const

export type ItemFlingEffectRetrieveQueryKey = ReturnType<typeof itemFlingEffectRetrieveQueryKey>

export function itemFlingEffectRetrieveQueryOptions(
  id: ItemFlingEffectRetrievePathParams['id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  return {
    fetcher: async () => {
      return itemFlingEffectRetrieve(id, config)
    },
  }
}

/**
 * @description The various effects of the move"Fling" when used with different items.
 * @summary Get item fling effect
 * {@link /api/v2/item-fling-effect/:id/}
 */
export function useItemFlingEffectRetrieve(
  id: ItemFlingEffectRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<ItemFlingEffectRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = itemFlingEffectRetrieveQueryKey(id)

  return useSWR<ItemFlingEffectRetrieveQueryResponse, ResponseErrorConfig<Error>, ItemFlingEffectRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...itemFlingEffectRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}