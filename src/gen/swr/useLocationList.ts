/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { LocationListQueryResponse, LocationListQueryParams } from '../types/LocationList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { locationList } from '../client/locationList.ts'

export const locationListQueryKey = (params?: LocationListQueryParams) => [{ url: '/api/v2/location/' }, ...(params ? [params] : [])] as const

export type LocationListQueryKey = ReturnType<typeof locationListQueryKey>

export function locationListQueryOptions(params?: LocationListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return locationList(params, config)
    },
  }
}

/**
 * @description Locations that can be visited within the games. Locations make up sizable portions of regions, like cities or routes.
 * @summary List locations
 * {@link /api/v2/location/}
 */
export function useLocationList(
  params?: LocationListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<LocationListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = locationListQueryKey(params)

  return useSWR<LocationListQueryResponse, ResponseErrorConfig<Error>, LocationListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...locationListQueryOptions(params, config),
    ...queryOptions,
  })
}