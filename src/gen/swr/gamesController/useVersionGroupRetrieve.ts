/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { VersionGroupRetrieveQueryResponse, VersionGroupRetrievePathParams } from '../../models/gamesController/VersionGroupRetrieve.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { versionGroupRetrieve } from '../../clients/gamesController/versionGroupRetrieve.ts'

export const versionGroupRetrieveQueryKey = (id: VersionGroupRetrievePathParams['id']) => [{ url: '/api/v2/version-group/:id/', params: { id: id } }] as const

export type VersionGroupRetrieveQueryKey = ReturnType<typeof versionGroupRetrieveQueryKey>

export function versionGroupRetrieveQueryOptions(id: VersionGroupRetrievePathParams['id'], config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return versionGroupRetrieve(id, config)
    },
  }
}

/**
 * @description Version groups categorize highly similar versions of the games.
 * @summary Get version group
 * {@link /api/v2/version-group/:id/}
 */
export function useVersionGroupRetrieve(
  id: VersionGroupRetrievePathParams['id'],
  options: {
    query?: Parameters<typeof useSWR<VersionGroupRetrieveQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = versionGroupRetrieveQueryKey(id)

  return useSWR<VersionGroupRetrieveQueryResponse, ResponseErrorConfig<Error>, VersionGroupRetrieveQueryKey | null>(shouldFetch ? queryKey : null, {
    ...versionGroupRetrieveQueryOptions(id, config),
    ...queryOptions,
  })
}