/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import useSWR from 'swr'
import type { VersionListQueryResponse, VersionListQueryParams } from '../../models/gamesController/VersionList.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import { versionList } from '../../clients/gamesController/versionList.ts'

export const versionListQueryKey = (params?: VersionListQueryParams) => [{ url: '/api/v2/version/' }, ...(params ? [params] : [])] as const

export type VersionListQueryKey = ReturnType<typeof versionListQueryKey>

export function versionListQueryOptions(params?: VersionListQueryParams, config: Partial<RequestConfig> & { client?: typeof client } = {}) {
  return {
    fetcher: async () => {
      return versionList(params, config)
    },
  }
}

/**
 * @description Versions of the games, e.g., Red, Blue or Yellow.
 * @summary List versions
 * {@link /api/v2/version/}
 */
export function useVersionList(
  params?: VersionListQueryParams,
  options: {
    query?: Parameters<typeof useSWR<VersionListQueryResponse, ResponseErrorConfig<Error>>>[2]
    client?: Partial<RequestConfig> & { client?: typeof client }
    shouldFetch?: boolean
  } = {},
) {
  const { query: queryOptions, client: config = {}, shouldFetch = true } = options ?? {}

  const queryKey = versionListQueryKey(params)

  return useSWR<VersionListQueryResponse, ResponseErrorConfig<Error>, VersionListQueryKey | null>(shouldFetch ? queryKey : null, {
    ...versionListQueryOptions(params, config),
    ...queryOptions,
  })
}